===========
advanced/D#
===========
--- metac
+++ metacp
                   type_ref {
                     prefix {
-                    symbol: "local10"
+                    symbol: "advanced/D#_$2#"
             declarations {
               hardlinks {
-                symbol: "local10"
+                symbol: "advanced/D#_$2#"
                 kind: TYPE
                 properties: 4
                 display_name: "_"
     declarations {
       symlinks: "advanced/D#`<init>`()."
+      symlinks: "advanced/D#_$2#"


==========================
advanced/Existential#e1().
==========================
--- metac
+++ metacp
               type_ref {
                 prefix {
-                symbol: "local6"
+                symbol: "local0"
         declarations {
           hardlinks {
-            symbol: "local6"
+            symbol: "local0"
             kind: TYPE
             properties: 4
             display_name: "_"


==========================
advanced/Existential#e2().
==========================
--- metac
+++ metacp
                   type_ref {
                     prefix {
-                    symbol: "local7"
+                    symbol: "local1"
             declarations {
               hardlinks {
-                symbol: "local7"
+                symbol: "local1"
                 kind: TYPE
                 properties: 4
                 display_name: "T"


==========================
advanced/Existential#e4().
==========================
--- metac
+++ metacp
           type_ref {
             prefix {
-            symbol: "local8"
+            symbol: "local2"
             type_arguments {
               type_ref {
                 prefix {
         declarations {
           hardlinks {
-            symbol: "local8"
+            symbol: "local2"
             kind: TYPE
             properties: 4
             display_name: "U"
                     type_parameters {
                       hardlinks {
-                        symbol: "local9"
+                        symbol: "local3"
                         kind: TYPE_PARAMETER
                         properties: 0
                         display_name: "T"


=========================
advanced/Structural#s3().
=========================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local3"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             display_name: "m"
                 parameter_lists {
                   hardlinks {
-                    symbol: "local4"
+                    symbol: "local3"
                     kind: PARAMETER
                     properties: 0
                     display_name: "x"


=================
advanced/Test.e2.
=================
--- metac
+++ metacp
                   type_ref {
                     prefix {
-                    symbol: "local7"
+                    symbol: "advanced/Test.T#"
             declarations {
               hardlinks {
-                symbol: "local7"
+                symbol: "advanced/Test.T#"
                 kind: TYPE
                 properties: 4
                 display_name: "T"


=================
advanced/Test.s3.
=================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local3"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             display_name: "m"
                 parameter_lists {
                   hardlinks {
-                    symbol: "local4"
+                    symbol: "local3"
                     kind: PARAMETER
                     properties: 0
                     display_name: "x"


==============
annot/Alias.A#
==============
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/meta/param#"
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/meta/param#"


============================
classes/C3#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


============================
classes/C4#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


============================
classes/C6#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


====================
classes/N.anonClass.
====================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local9"
+            symbol: "local0"
             kind: METHOD
             properties: 1024
             display_name: "local"


===============
example/Access#
===============
--- metac
+++ metacp
       symlinks: "example/Access#`<init>`()."
       symlinks: "example/Access#m1()."
       symlinks: "example/Access#m2()."
-      symlinks: "example/Access#m3()."
       symlinks: "example/Access#m4()."
       symlinks: "example/Access#m5()."
       symlinks: "example/Access#m6()."
       symlinks: "example/Access#m7()."
+      symlinks: "example/Access#m3()."


======================================
example/InstrumentTyper#AnnotatedType#
======================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/meta/param#"
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/meta/param#"


======================================
example/InstrumentTyper#existential().
======================================
--- metac
+++ metacp
           type_ref {
             prefix {
-            symbol: "local1"
+            symbol: "local0"
             type_arguments {
               type_ref {
                 prefix {
         declarations {
           hardlinks {
-            symbol: "local1"
+            symbol: "local0"
             kind: TYPE
             properties: 4
             display_name: "U"
                     type_parameters {
                       hardlinks {
-                        symbol: "local2"
+                        symbol: "local1"
                         kind: TYPE_PARAMETER
                         properties: 0
                         display_name: "T"


=========================
example/Methods#m13().(x)
=========================
--- metac
+++ metacp
 signature {
   value_signature {
     tpe {
-      annotated_type {
-        tpe {
-          type_ref {
-            prefix {
-            symbol: "scala/Int#"
+      type_ref {
+        prefix {
-        annotations {
-          tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/unchecked#"
+        symbol: "scala/Int#"


================================
example/Methods#m19$default$2().
================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


================================
example/Methods#m19$default$3().
================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


==================================================================
example/NamedApplyBlockCaseClassConstruction.Msg#copy$default$1().
==================================================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


==================================================================
example/NamedApplyBlockCaseClassConstruction.Msg#copy$default$2().
==================================================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


==================================================================
example/NamedApplyBlockCaseClassConstruction.Msg#copy$default$3().
==================================================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


======================================================================
example/NamedApplyBlockCaseClassConstruction.Msg.`<init>$default$2`().
======================================================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


===================================================================
example/NamedApplyBlockCaseClassConstruction.Msg.apply$default$2().
===================================================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


===============================================
example/NamedApplyBlockMethods.foo$default$1().
===============================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


===============================================
example/NamedApplyBlockMethods.foo$default$2().
===============================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


===============================================
example/NamedApplyBlockMethods.foo$default$3().
===============================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


=============================================
example/NamedArguments#User#copy$default$1().
=============================================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "scala/annotation/unchecked/uncheckedVariance#"


======================
example/Synthetic#x$2.
======================
--- metac
+++ metacp
 access {
-  public_access {
+  private_this_access {


=======================
example/ValPattern#x$1.
=======================
--- metac
+++ metacp
 access {
-  public_access {
+  private_this_access {


=======================
example/ValPattern#x$2.
=======================
--- metac
+++ metacp
 access {
-  public_access {
+  private_this_access {


======================
types/Test.C#annType1.
======================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "types/ann#"
-              type_arguments {
-                type_ref {
-                  prefix {
-                  symbol: "scala/Int#"


======================
types/Test.C#annType2.
======================
--- metac
+++ metacp
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "types/ann1#"
         annotations {
           tpe {
-            type_ref {
-              prefix {
-              symbol: "types/ann2#"


===========================
types/Test.C#compoundType4.
===========================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local3"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             display_name: "k"


===========================
types/Test.C#compoundType6.
===========================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local6"
+            symbol: "local3"
             kind: METHOD
             properties: 0
             display_name: "k"


==============================
types/Test.C#existentialType1.
==============================
--- metac
+++ metacp
           type_ref {
             prefix {
-            symbol: "local7"
+            symbol: "local4"
         declarations {
           hardlinks {
-            symbol: "local7"
+            symbol: "local4"
             kind: TYPE
             properties: 4
             display_name: "T"


==============================
types/Test.C#existentialType2.
==============================
--- metac
+++ metacp
               type_ref {
                 prefix {
-                symbol: "local8"
+                symbol: "local5"
         declarations {
           hardlinks {
-            symbol: "local8"
+            symbol: "local5"
             kind: TYPE
             properties: 4
             display_name: "_"


==============================
types/Test.C#existentialType3.
==============================
--- metac
+++ metacp
               type_ref {
                 prefix {
-                symbol: "local9"
+                symbol: "local6"
         declarations {
           hardlinks {
-            symbol: "local9"
+            symbol: "local6"
             kind: TYPE
             properties: 4
             display_name: "?0"


==============================
types/Test.C#existentialType4.
==============================
--- metac
+++ metacp
               type_ref {
                 prefix {
-                symbol: "local10"
+                symbol: "local7"
         declarations {
           hardlinks {
-            symbol: "local10"
+            symbol: "local7"
             kind: TYPE
             properties: 4
             display_name: "?0"


