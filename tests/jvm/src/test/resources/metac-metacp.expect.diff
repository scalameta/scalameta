===========
advanced.D#
===========
--- metac
+++ metacp
                   typeRef {
                     prefix {
-                    symbol: "local14"
+                    symbol: "advanced.D#_#"
             declarations {
               hardlinks {
-                symbol: "local14"
+                symbol: "advanced.D#_#"
                 kind: TYPE
                 properties: 4
                 name: "_"
     self {
     declarations {
+      symlinks: "advanced.D#_#"
       symlinks: "advanced.D#`<init>`()."


==========================
advanced.Existential#e1().
==========================
--- metac
+++ metacp
               typeRef {
                 prefix {
-                symbol: "local7"
+                symbol: "local0"
         declarations {
           hardlinks {
-            symbol: "local7"
+            symbol: "local0"
             kind: TYPE
             properties: 4
             name: "_"


==========================
advanced.Existential#e2().
==========================
--- metac
+++ metacp
                   typeRef {
                     prefix {
-                    symbol: "local8"
+                    symbol: "local1"
             declarations {
               hardlinks {
-                symbol: "local8"
+                symbol: "local1"
                 kind: TYPE
                 properties: 4
                 name: "T"


==========================
advanced.Existential#e4().
==========================
--- metac
+++ metacp
           typeRef {
             prefix {
-            symbol: "local10"
+            symbol: "local2"
             type_arguments {
               typeRef {
                 prefix {
         declarations {
           hardlinks {
-            symbol: "local10"
+            symbol: "local2"
             kind: TYPE
             properties: 4
             name: "U"
                     type_parameters {
                       hardlinks {
-                        symbol: "local11"
+                        symbol: "local3"
                         kind: TYPE_PARAMETER
                         properties: 0
                         name: "T"


=========================
advanced.Structural#s3().
=========================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local3"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             name: "m"
                 parameterLists {
                   hardlinks {
-                    symbol: "local4"
+                    symbol: "local3"
                     kind: PARAMETER
                     properties: 0
                     name: "x"


===================
advanced.Test.e2().
===================
--- metac
+++ metacp
                   typeRef {
                     prefix {
-                    symbol: "local8"
+                    symbol: "advanced.Test.T#"
             declarations {
               hardlinks {
-                symbol: "local8"
+                symbol: "advanced.Test.T#"
                 kind: TYPE
                 properties: 4
                 name: "T"


===================
advanced.Test.s3().
===================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local3"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             name: "m"
                 parameterLists {
                   hardlinks {
-                    symbol: "local4"
+                    symbol: "local3"
                     kind: PARAMETER
                     properties: 0
                     name: "x"


============================
classes.C3#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


============================
classes.C4#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


============================
classes.C6#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


======================
classes.N.anonClass().
======================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local1"
+            symbol: "local0"
             kind: METHOD
             properties: 1024
             name: "local"


============
example.Acc#
============
--- metac
+++ metacp
       symlinks: "example.Acc#`<init>`()."
       symlinks: "example.Acc#m1()."
       symlinks: "example.Acc#m2()."
-      symlinks: "example.Acc#m3()."
       symlinks: "example.Acc#m4()."
       symlinks: "example.Acc#m5()."
       symlinks: "example.Acc#m6()."
       symlinks: "example.Acc#m7()."
+      symlinks: "example.Acc#m3()."


=========================
example.Methods#m13().(x)
=========================
--- metac
+++ metacp
 signature {
   valueSignature {
     tpe {
-      annotatedType {
-        tpe {
-          typeRef {
-            prefix {
-            symbol: "scala.Int#"
+      typeRef {
+        prefix {
-        annotations {
-          tpe {
-            typeRef {
-              prefix {
-              symbol: "scala.unchecked#"
+        symbol: "scala.Int#"


================
flags.p.package.
================
--- metac
+++ metacp
       symlinks: "flags.p.package.C#"
       symlinks: "flags.p.package.T1#"
       symlinks: "flags.p.package.T2#"
+      symlinks: "flags.p.package.S#"
       symlinks: "flags.p.package.U#"
       symlinks: "flags.p.package.V#"
       symlinks: "flags.p.package.X."
       symlinks: "flags.p.package.Y#"
       symlinks: "flags.p.package.Z#"
       symlinks: "flags.p.package.AA#"
-      symlinks: "flags.p.package.S#"
       symlinks: "flags.p.package.xs1()."


=====================
flags.p.package.S#[T]
=====================
--- metac
+++ metacp
 kind: TYPE_PARAMETER
 properties: 0
 name: "T"
-annotations {
-  tpe {
-    typeRef {
-      prefix {
-      symbol: "scala.specialized#"
-}
 accessibility {
   tag: PUBLIC
   symbol: ""


========================
types.Test.C#annType1().
========================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "types.ann#"
-              type_arguments {
-                typeRef {
-                  prefix {
-                  symbol: "scala.Int#"


========================
types.Test.C#annType2().
========================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "types.ann1#"
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "types.ann2#"


=============================
types.Test.C#compoundType4().
=============================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local3"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             name: "k"


=============================
types.Test.C#compoundType6().
=============================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local5"
+            symbol: "local3"
             kind: METHOD
             properties: 0
             name: "k"


================================
types.Test.C#existentialType1().
================================
--- metac
+++ metacp
           typeRef {
             prefix {
-            symbol: "local7"
+            symbol: "local4"
         declarations {
           hardlinks {
-            symbol: "local7"
+            symbol: "local4"
             kind: TYPE
             properties: 4
             name: "T"


================================
types.Test.C#existentialType2().
================================
--- metac
+++ metacp
               typeRef {
                 prefix {
-                symbol: "local8"
+                symbol: "local5"
         declarations {
           hardlinks {
-            symbol: "local8"
+            symbol: "local5"
             kind: TYPE
             properties: 4
             name: "_"


===========================
types.Test.C#singleType2().
===========================
--- metac
+++ metacp
             symbol: "types.Test.C#p()."
-        symbol: "types.P#x()."
+        symbol: "types.P#x."


==============================
types.Test.Literal.javaEnum().
==============================
--- metac
+++ metacp
 language: SCALA
 signature {
-  methodSignature {
-    type_parameters {
-    return_type {
-      singleType {
-        prefix {
-        symbol: "java.nio.file.LinkOption#NOFOLLOW_LINKS."


