eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgIyBGZXRjaCBmb2xkZXJzIGZyb20gZGlzdHJpYnV0ZWQgY2FjaGUKICBzZnRwX2NhY2hlX3Jlc3RvcmU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlCiAgICByZXN0b3JlOiB0cnVlCiAgICBtb3VudDoKICAgICAgLSAvZHJvbmUvLml2eTIKICAgICAgLSAvZHJvbmUvLmNvdXJzaWVyLWNhY2hlCiAgICAgIC0gL2Ryb25lLy5zYnQKICAgICAgLSAvZHJvbmUvLmdpdAoKICB0ZXN0czoKICAgIGltYWdlOiBzY2FsYXBsYXRmb3JtL3NjYWxhOjAuNQogICAgcHVsbDogdHJ1ZQogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGxvZyB8IGhlYWQgLW4gMjAKICAgICAgLSAuL2Jpbi9jaGVja0NMQS5zaAogICAgICAtIC4vYmluL3NjYWxhZm10IC0tdGVzdAogICAgICAtIHNidCAtRHNidC5pdnkuaG9tZT0vZHJvbmUvY2FjaGUvaXZ5MiBjaQoKICBwdWJsaXNoOgogICAgaW1hZ2U6IGVuc2ltZS9lbnNpbWU6djIueC1jYWNoZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gU09OQVRZUEVfVVNFUk5BTUU9JCRTT05BVFlQRV9VU0VSTkFNRQogICAgICAtIFNPTkFUWVBFX1BBU1NXT1JEPSQkU09OQVRZUEVfUEFTU1dPUkQKICAgICAgLSBHSVRIVUJfVVNFUk5BTUU9JCRHSVRIVUJfVVNFUk5BTUUKICAgICAgLSBHSVRIVUJfUEFTU1dPUkQ9JCRHSVRIVUJfUEFTU1dPUkQKICAgICAgLSBCSU5UUkFZX1VTRVJOQU1FPSQkQklOVFJBWV9VU0VSTkFNRQogICAgICAtIEJJTlRSQVlfQVBJX0tFWT0kJEJJTlRSQVlfQVBJX0tFWQogICAgICAtIE1BSUxHVU5fUEFTU1dPUkQ9JCRNQUlMR1VOX1BBU1NXT1JECiAgICBjb21tYW5kczoKICAgICAgLSAuL2Jpbi9iaW50cmF5LnNoCiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IFttYXN0ZXIsIDIueF0KCiAgIyBTYXZlIGZvbGRlcnMgaW4gZGlzdHJpYnV0ZWQgY2FjaGUKICBzZnRwX2NhY2hlX3JlYnVpbGQ6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlCiAgICByZWJ1aWxkOiB0cnVlCiAgICBtb3VudDoKICAgICAgLSAvZHJvbmUvLml2eTIKICAgICAgLSAvZHJvbmUvLmNvdXJzaWVyLWNhY2hlCiAgICAgIC0gL2Ryb25lLy5zYnQKICAgICAgLSAvZHJvbmUvLmdpdAo.Nc3OuEtxvhMN8NET8jPKqC-JqbSbfNGD9FmGf02NPYc